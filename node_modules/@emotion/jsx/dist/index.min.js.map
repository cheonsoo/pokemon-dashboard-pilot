{"version":3,"file":"index.min.js","sources":["../../utils/src/index.js","../../unitless/src/index.js","../../memoize/src/index.js","../../serialize/src/index.js","../src/index.js","../../hash/src/index.js"],"sourcesContent":["// @flow\nimport type { CSSCache, CSSContextType, InsertableStyles } from '@emotion/types'\n\nexport const isBrowser = typeof document !== 'undefined'\nexport const shouldSerializeToReactTree =\n  !isBrowser || process.env.NODE_ENV === 'test'\n\nexport function getRegisteredStyles(\n  registered: CSSCache,\n  registeredStyles: string[],\n  classNames: string\n) {\n  let rawClassName = ''\n\n  classNames.split(' ').forEach(className => {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className])\n    } else {\n      rawClassName += `${className} `\n    }\n  })\n  return rawClassName\n}\n\nexport const insertStyles = (\n  context: CSSContextType,\n  insertable: InsertableStyles\n) => {\n  if (\n    insertable.type === 1 &&\n    context.registered[`css-${insertable.name}`] === undefined\n  ) {\n    context.registered[`css-${insertable.name}`] = insertable.styles\n  }\n  if (context.inserted[insertable.name] === undefined) {\n    let rules = context.stylis(\n      insertable.type === 1 ? `.css-${insertable.name}` : '',\n      insertable.styles\n    )\n\n    if (shouldSerializeToReactTree) {\n      context.inserted[insertable.name] = rules.join('')\n    } else {\n      rules.forEach(rule => {\n        context.sheet.insert(rule)\n      })\n      context.inserted[insertable.name] = true\n    }\n    if (context.compat === undefined) {\n      return context.inserted[insertable.name]\n    }\n  }\n}\n","// @flow\nexport default {\n  animationIterationCount: 1,\n  borderImageOutset: 1,\n  borderImageSlice: 1,\n  borderImageWidth: 1,\n  boxFlex: 1,\n  boxFlexGroup: 1,\n  boxOrdinalGroup: 1,\n  columnCount: 1,\n  columns: 1,\n  flex: 1,\n  flexGrow: 1,\n  flexPositive: 1,\n  flexShrink: 1,\n  flexNegative: 1,\n  flexOrder: 1,\n  gridRow: 1,\n  gridRowEnd: 1,\n  gridRowSpan: 1,\n  gridRowStart: 1,\n  gridColumn: 1,\n  gridColumnEnd: 1,\n  gridColumnSpan: 1,\n  gridColumnStart: 1,\n  fontWeight: 1,\n  lineHeight: 1,\n  opacity: 1,\n  order: 1,\n  orphans: 1,\n  tabSize: 1,\n  widows: 1,\n  zIndex: 1,\n  zoom: 1,\n  WebkitLineClamp: 1,\n\n  // SVG-related properties\n  fillOpacity: 1,\n  floodOpacity: 1,\n  stopOpacity: 1,\n  strokeDasharray: 1,\n  strokeDashoffset: 1,\n  strokeMiterlimit: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n}\n","// @flow\n\nexport default function memoize(fn: string => any) {\n  const cache = {}\n\n  return (arg: string) => {\n    if (cache[arg] === undefined) cache[arg] = fn(arg)\n    return cache[arg]\n  }\n}\n","// @flow\nimport type {\n  Interpolation,\n  ScopedInsertableStyles,\n  CSSCache\n} from '@emotion/types'\nimport hashString from '@emotion/hash'\nimport unitless from '@emotion/unitless'\nimport memoize from '@emotion/memoize'\n\nconst hyphenateRegex = /[A-Z]|^ms/g\n\nexport const processStyleName: (styleName: string) => string = memoize(\n  (styleName: string) => styleName.replace(hyphenateRegex, '-$&').toLowerCase()\n)\n\nexport let processStyleValue = (key: string, value: string): string => {\n  if (value == null || typeof value === 'boolean') {\n    return ''\n  }\n\n  if (\n    unitless[key] !== 1 &&\n    key.charCodeAt(1) !== 45 && // custom properties\n    !isNaN(value) &&\n    value !== 0\n  ) {\n    return value + 'px'\n  }\n  return value\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  let contentValuePattern = /(attr|calc|counters?|url)\\(/\n  let contentValues = [\n    'normal',\n    'none',\n    'counter',\n    'open-quote',\n    'close-quote',\n    'no-open-quote',\n    'no-close-quote',\n    'initial',\n    'inherit',\n    'unset'\n  ]\n  let oldProcessStyleValue = processStyleValue\n  processStyleValue = (key: string, value: string) => {\n    if (key === 'content') {\n      if (\n        typeof value !== 'string' ||\n        (contentValues.indexOf(value) === -1 &&\n          !contentValuePattern.test(value) &&\n          (value.charAt(0) !== value.charAt(value.length - 1) ||\n            (value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")))\n      ) {\n        console.error(\n          `You seem to be using a value for 'content' without quotes, try replacing it with \\`content: '\"${value}\"'\\``\n        )\n      }\n    }\n    return oldProcessStyleValue(key, value)\n  }\n}\n\nexport function handleInterpolation(\n  registered: CSSCache,\n  interpolation: Interpolation\n): string | number {\n  if (interpolation == null) {\n    return ''\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      return ''\n    case 'function':\n      if (this === undefined) {\n        return interpolation.toString()\n      }\n      return handleInterpolation.call(\n        this,\n        registered,\n        // $FlowFixMe\n        interpolation(this)\n      )\n    case 'object':\n      if (interpolation.type === 2) {\n        return interpolation.name\n      }\n      if (interpolation.styles !== undefined) {\n        return interpolation.styles\n      }\n\n      return createStringFromObject.call(this, registered, interpolation)\n    default:\n      const cached = registered[interpolation]\n      return cached !== undefined ? cached : interpolation\n  }\n}\n\nfunction createStringFromObject(\n  registered: CSSCache,\n  obj: { [key: string]: Interpolation }\n): string {\n  let string = ''\n\n  if (Array.isArray(obj)) {\n    obj.forEach(function(interpolation: Interpolation) {\n      string += handleInterpolation.call(this, registered, interpolation)\n    }, this)\n  } else {\n    Object.keys(obj).forEach(function(key: string) {\n      if (typeof obj[key] !== 'object') {\n        string += `${processStyleName(key)}:${processStyleValue(\n          key,\n          obj[key]\n        )};`\n      } else {\n        if (Array.isArray(obj[key]) && typeof obj[key][0] === 'string') {\n          obj[key].forEach(value => {\n            string += `${processStyleName(key)}:${processStyleValue(\n              key,\n              value\n            )};`\n          })\n        } else {\n          string += `${key}{${handleInterpolation.call(\n            this,\n            registered,\n            obj[key]\n          )}}`\n        }\n      }\n    }, this)\n  }\n\n  return string\n}\n\nexport const labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g\n\nexport const serializeStyles = function(\n  registered: CSSCache,\n  args: Array<Interpolation>\n): ScopedInsertableStyles {\n  if (\n    args.length === 1 &&\n    typeof args[0] === 'object' &&\n    args[0] !== null &&\n    args[0].styles !== undefined\n  ) {\n    return args[0]\n  }\n  let styles = ''\n  let identifierName = ''\n  args.forEach(function(interpolation, i) {\n    styles += handleInterpolation.call(this, registered, interpolation)\n  }, this)\n  styles = styles.replace(labelPattern, (match, p1: string) => {\n    identifierName += `-${p1}`\n    return ''\n  })\n  let name = hashString(styles) + identifierName\n\n  return {\n    type: 1,\n    name,\n    styles\n  }\n}\n","// @flow\nimport * as React from 'react'\nimport { consume } from '@emotion/core'\nimport {\n  getRegisteredStyles,\n  insertStyles,\n  shouldSerializeToReactTree\n} from '@emotion/utils'\nimport { serializeStyles } from '@emotion/serialize'\n\n// $FlowFixMe\nconst jsx: typeof React.createElement = function(\n  type: React.ElementType,\n  props: Object\n) {\n  if (props == null || props.css == null || type.__emotion_component === true) {\n    // $FlowFixMe\n    return React.createElement.apply(undefined, arguments)\n  }\n  if (\n    typeof props.css === 'string' &&\n    // check if there is a css declaration\n    props.css.indexOf(':') !== -1 &&\n    process.env.NODE_ENV !== 'production'\n  ) {\n    throw new Error(\n      `Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css\\`${\n        props.css\n      }\\``\n    )\n  }\n\n  return consume(context => {\n    let registeredStyles = []\n\n    let className = ''\n    if (props.className !== undefined) {\n      className = getRegisteredStyles(\n        context.registered,\n        registeredStyles,\n        props.className\n      )\n    }\n    registeredStyles.push(\n      typeof props.css === 'function' ? props.css(context.theme) : props.css\n    )\n    const serialized = serializeStyles(context.registered, registeredStyles)\n    const rules = insertStyles(context, serialized)\n    className += `css-${serialized.name}`\n\n    const newProps = {}\n    for (let key in props) {\n      if (Object.prototype.hasOwnProperty.call(props, key) && key !== 'css') {\n        newProps[key] = props[key]\n      }\n    }\n    newProps.className = className\n\n    let childrenLength = arguments.length\n\n    let createElementArgArray = Array(childrenLength)\n    createElementArgArray[0] = type\n    createElementArgArray[1] = newProps\n\n    for (let i = 2; i < childrenLength; i++) {\n      createElementArgArray[i] = arguments[i]\n    }\n\n    // $FlowFixMe\n    const ele = React.createElement.apply(undefined, createElementArgArray)\n    if (shouldSerializeToReactTree && rules !== undefined) {\n      return (\n        <React.Fragment>\n          <style\n            data-emotion-ssr={serialized.name}\n            dangerouslySetInnerHTML={{ __html: rules }}\n          />\n          {ele}\n        </React.Fragment>\n      )\n    }\n    return ele\n  })\n}\n\nexport default jsx\n","// @flow\n/* eslint-disable */\n// murmurhash2 via https://github.com/garycourt/murmurhash-js/blob/master/murmurhash2_gc.js\n\nexport default function murmurhash2_32_gc(str: string) {\n  var l = str.length,\n    h = l ^ l,\n    i = 0,\n    k\n\n  while (l >= 4) {\n    k =\n      (str.charCodeAt(i) & 0xff) |\n      ((str.charCodeAt(++i) & 0xff) << 8) |\n      ((str.charCodeAt(++i) & 0xff) << 16) |\n      ((str.charCodeAt(++i) & 0xff) << 24)\n\n    k = (k & 0xffff) * 0x5bd1e995 + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16)\n    k ^= k >>> 24\n    k = (k & 0xffff) * 0x5bd1e995 + ((((k >>> 16) * 0x5bd1e995) & 0xffff) << 16)\n\n    h =\n      ((h & 0xffff) * 0x5bd1e995 +\n        ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)) ^\n      k\n\n    l -= 4\n    ++i\n  }\n\n  switch (l) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff\n      h =\n        (h & 0xffff) * 0x5bd1e995 + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)\n  }\n\n  h ^= h >>> 13\n  h = (h & 0xffff) * 0x5bd1e995 + ((((h >>> 16) * 0x5bd1e995) & 0xffff) << 16)\n  h ^= h >>> 15\n\n  return (h >>> 0).toString(36)\n}\n"],"names":["shouldSerializeToReactTree","document","process","fn","cache","hyphenateRegex","processStyleName","styleName","replace","toLowerCase","arg","undefined","processStyleValue","key","value","unitless","charCodeAt","isNaN","handleInterpolation","registered","interpolation","this","toString","call","type","name","styles","obj","string","Array","isArray","forEach","keys","cached","labelPattern","props","css","__emotion_component","React","apply","arguments","indexOf","consume","registeredStyles","className","classNames","rawClassName","split","push","getRegisteredStyles","context","theme","serialized","args","length","identifierName","i","str","k","l","h","hashString","match","p1","serializeStyles","rules","insertable","inserted","stylis","join","sheet","insert","rule","compat","insertStyles","newProps","Object","prototype","hasOwnProperty","childrenLength","createElementArgArray","ele","React.createElement","React.Fragment"],"mappings":"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"}