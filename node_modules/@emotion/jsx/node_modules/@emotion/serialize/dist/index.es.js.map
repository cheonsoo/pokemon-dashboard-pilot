{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["// @flow\nimport type {\n  Interpolation,\n  ScopedInsertableStyles,\n  CSSCache\n} from '@emotion/types'\nimport hashString from '@emotion/hash'\nimport unitless from '@emotion/unitless'\nimport memoize from '@emotion/memoize'\n\nconst hyphenateRegex = /[A-Z]|^ms/g\n\nexport const processStyleName: (styleName: string) => string = memoize(\n  (styleName: string) => styleName.replace(hyphenateRegex, '-$&').toLowerCase()\n)\n\nexport let processStyleValue = (key: string, value: string): string => {\n  if (value == null || typeof value === 'boolean') {\n    return ''\n  }\n\n  if (\n    unitless[key] !== 1 &&\n    key.charCodeAt(1) !== 45 && // custom properties\n    !isNaN(value) &&\n    value !== 0\n  ) {\n    return value + 'px'\n  }\n  return value\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  let contentValuePattern = /(attr|calc|counters?|url)\\(/\n  let contentValues = [\n    'normal',\n    'none',\n    'counter',\n    'open-quote',\n    'close-quote',\n    'no-open-quote',\n    'no-close-quote',\n    'initial',\n    'inherit',\n    'unset'\n  ]\n  let oldProcessStyleValue = processStyleValue\n  processStyleValue = (key: string, value: string) => {\n    if (key === 'content') {\n      if (\n        typeof value !== 'string' ||\n        (contentValues.indexOf(value) === -1 &&\n          !contentValuePattern.test(value) &&\n          (value.charAt(0) !== value.charAt(value.length - 1) ||\n            (value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")))\n      ) {\n        console.error(\n          `You seem to be using a value for 'content' without quotes, try replacing it with \\`content: '\"${value}\"'\\``\n        )\n      }\n    }\n    return oldProcessStyleValue(key, value)\n  }\n}\n\nexport function handleInterpolation(\n  registered: CSSCache,\n  interpolation: Interpolation\n): string | number {\n  if (interpolation == null) {\n    return ''\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      return ''\n    case 'function':\n      if (this === undefined) {\n        return interpolation.toString()\n      }\n      return handleInterpolation.call(\n        this,\n        registered,\n        // $FlowFixMe\n        interpolation(this)\n      )\n    case 'object':\n      if (interpolation.type === 2) {\n        return interpolation.name\n      }\n      if (interpolation.styles !== undefined) {\n        return interpolation.styles\n      }\n\n      return createStringFromObject.call(this, registered, interpolation)\n    default:\n      const cached = registered[interpolation]\n      return cached !== undefined ? cached : interpolation\n  }\n}\n\nfunction createStringFromObject(\n  registered: CSSCache,\n  obj: { [key: string]: Interpolation }\n): string {\n  let string = ''\n\n  if (Array.isArray(obj)) {\n    obj.forEach(function(interpolation: Interpolation) {\n      string += handleInterpolation.call(this, registered, interpolation)\n    }, this)\n  } else {\n    Object.keys(obj).forEach(function(key: string) {\n      if (typeof obj[key] !== 'object') {\n        string += `${processStyleName(key)}:${processStyleValue(\n          key,\n          obj[key]\n        )};`\n      } else {\n        if (Array.isArray(obj[key]) && typeof obj[key][0] === 'string') {\n          obj[key].forEach(value => {\n            string += `${processStyleName(key)}:${processStyleValue(\n              key,\n              value\n            )};`\n          })\n        } else {\n          string += `${key}{${handleInterpolation.call(\n            this,\n            registered,\n            obj[key]\n          )}}`\n        }\n      }\n    }, this)\n  }\n\n  return string\n}\n\nexport const labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g\n\nexport const serializeStyles = function(\n  registered: CSSCache,\n  args: Array<Interpolation>\n): ScopedInsertableStyles {\n  if (\n    args.length === 1 &&\n    typeof args[0] === 'object' &&\n    args[0] !== null &&\n    args[0].styles !== undefined\n  ) {\n    return args[0]\n  }\n  let styles = ''\n  let identifierName = ''\n  args.forEach(function(interpolation, i) {\n    styles += handleInterpolation.call(this, registered, interpolation)\n  }, this)\n  styles = styles.replace(labelPattern, (match, p1: string) => {\n    identifierName += `-${p1}`\n    return ''\n  })\n  let name = hashString(styles) + identifierName\n\n  return {\n    type: 1,\n    name,\n    styles\n  }\n}\n"],"names":["hyphenateRegex","processStyleName","memoize","styleName","replace","toLowerCase","processStyleValue","key","value","unitless","charCodeAt","isNaN","process","env","NODE_ENV","contentValuePattern","contentValues","oldProcessStyleValue","indexOf","test","charAt","length","error","handleInterpolation","registered","interpolation","undefined","toString","call","type","name","styles","createStringFromObject","cached","obj","string","Array","isArray","forEach","keys","labelPattern","serializeStyles","args","identifierName","i","match","p1","hashString"],"mappings":";;;;AAUA,IAAMA,iBAAiB,YAAvB;AAEA,IAAaC,mBAAkDC,QAC7D,UAACC,SAAD;SAAuBA,UAAUC,OAAV,CAAkBJ,cAAlB,EAAkC,KAAlC,EAAyCK,WAAzC,EAAvB;CAD6D,CAAxD;AAIP,IAAWC,oBAAoB,2BAACC,GAAD,EAAcC,KAAd,EAAwC;MACjEA,SAAS,IAAT,IAAiB,OAAOA,KAAP,KAAiB,SAAtC,EAAiD;WACxC,EAAP;;;MAIAC,SAASF,GAAT,MAAkB,CAAlB,IACAA,IAAIG,UAAJ,CAAe,CAAf,MAAsB,EADtB;GAECC,MAAMH,KAAN,CAFD,IAGAA,UAAU,CAJZ,EAKE;WACOA,QAAQ,IAAf;;;SAEKA,KAAP;CAbK;;AAgBP,IAAII,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACrCC,sBAAsB,6BAA1B;MACIC,gBAAgB,CAClB,QADkB,EAElB,MAFkB,EAGlB,SAHkB,EAIlB,YAJkB,EAKlB,aALkB,EAMlB,eANkB,EAOlB,gBAPkB,EAQlB,SARkB,EASlB,SATkB,EAUlB,OAVkB,CAApB;MAYIC,uBAAuBX,iBAA3B;;sBACoB,2BAACC,GAAD,EAAcC,KAAd,EAAgC;QAC9CD,QAAQ,SAAZ,EAAuB;UAEnB,OAAOC,KAAP,KAAiB,QAAjB,IACCQ,cAAcE,OAAd,CAAsBV,KAAtB,MAAiC,CAAC,CAAlC,IACC,CAACO,oBAAoBI,IAApB,CAAyBX,KAAzB,CADF,KAEEA,MAAMY,MAAN,CAAa,CAAb,MAAoBZ,MAAMY,MAAN,CAAaZ,MAAMa,MAAN,GAAe,CAA5B,CAApB,IACEb,MAAMY,MAAN,CAAa,CAAb,MAAoB,GAApB,IAA2BZ,MAAMY,MAAN,CAAa,CAAb,MAAoB,GAHnD,CAFH,EAME;gBACQE,KAAR,oGACmGd,KADnG;;;;WAKGS,qBAAqBV,GAArB,EAA0BC,KAA1B,CAAP;GAdF;;;AAkBF,AAAO,SAASe,mBAAT,CACLC,UADK,EAELC,aAFK,EAGY;MACbA,iBAAiB,IAArB,EAA2B;WAClB,EAAP;;;UAGM,OAAOA,aAAf;SACO,SAAL;aACS,EAAP;;SACG,UAAL;UACM,SAASC,SAAb,EAAwB;eACfD,cAAcE,QAAd,EAAP;;;aAEKJ,oBAAoBK,IAApB,CACL,IADK,EAELJ,UAFK;oBAIS,IAAd,CAJK,CAAP;;SAMG,QAAL;UACMC,cAAcI,IAAd,KAAuB,CAA3B,EAA8B;eACrBJ,cAAcK,IAArB;;;UAEEL,cAAcM,MAAd,KAAyBL,SAA7B,EAAwC;eAC/BD,cAAcM,MAArB;;;aAGKC,uBAAuBJ,IAAvB,CAA4B,IAA5B,EAAkCJ,UAAlC,EAA8CC,aAA9C,CAAP;;;UAEMQ,SAAST,WAAWC,aAAX,CAAf;aACOQ,WAAWP,SAAX,GAAuBO,MAAvB,GAAgCR,aAAvC;;;;AAIN,SAASO,sBAAT,CACER,UADF,EAEEU,GAFF,EAGU;MACJC,SAAS,EAAb;;gBAGuBV,aAAT,EAAuC;cACvCF,oBAAoBK,IAApB,CAAyB,IAAzB,EAA+BJ,UAA/B,EAA2CC,aAA3C,CAAV;;;iBAGgClB,GAAT,EAAsB;0BAQf;gBACXN,iBAAiBM,GAAjB,CAAb,SAAsCD,kBACpCC,GADoC,EAEpCC,KAFoC,CAAtC;;;QARF,OAAO0B,IAAI3B,GAAJ,CAAP,KAAoB,QAAxB,EAAkC;gBACnBN,iBAAiBM,GAAjB,CAAb,SAAsCD,kBACpCC,GADoC,EAEpC2B,IAAI3B,GAAJ,CAFoC,CAAtC;KADF,MAKO;UACD6B,MAAMC,OAAN,CAAcH,IAAI3B,GAAJ,CAAd,KAA2B,OAAO2B,IAAI3B,GAAJ,EAAS,CAAT,CAAP,KAAuB,QAAtD,EAAgE;YAC1DA,GAAJ,EAAS+B,OAAT;OADF,MAOO;kBACQ/B,GAAb,SAAoBgB,oBAAoBK,IAApB,CAClB,IADkB,EAElBJ,UAFkB,EAGlBU,IAAI3B,GAAJ,CAHkB,CAApB;;;;;MApBJ6B,MAAMC,OAAN,CAAcH,GAAd,CAAJ,EAAwB;QAClBI,OAAJ,OAEG,IAFH;GADF,MAIO;WACEC,IAAP,CAAYL,GAAZ,EAAiBI,OAAjB,QAsBG,IAtBH;;;SAyBKH,MAAP;;;AAGF,IAAaK,eAAe,4BAArB;AAEP,IAAaC,kBAAkB,SAAlBA,eAAkB,CAC7BjB,UAD6B,EAE7BkB,IAF6B,EAGL;MAEtBA,KAAKrB,MAAL,KAAgB,CAAhB,IACA,OAAOqB,KAAK,CAAL,CAAP,KAAmB,QADnB,IAEAA,KAAK,CAAL,MAAY,IAFZ,IAGAA,KAAK,CAAL,EAAQX,MAAR,KAAmBL,SAJrB,EAKE;WACOgB,KAAK,CAAL,CAAP;;;MAEEX,SAAS,EAAb;MACIY,iBAAiB,EAArB;OACKL,OAAL,CAAa,UAASb,aAAT,EAAwBmB,CAAxB,EAA2B;cAC5BrB,oBAAoBK,IAApB,CAAyB,IAAzB,EAA+BJ,UAA/B,EAA2CC,aAA3C,CAAV;GADF,EAEG,IAFH;WAGSM,OAAO3B,OAAP,CAAeoC,YAAf,EAA6B,UAACK,KAAD,EAAQC,EAAR,EAAuB;4BACrCA,EAAtB;WACO,EAAP;GAFO,CAAT;MAIIhB,OAAOiB,WAAWhB,MAAX,IAAqBY,cAAhC;SAEO;UACC,CADD;cAAA;;GAAP;CAvBK;;;;"}